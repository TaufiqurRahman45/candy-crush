[{"F:\\candy-crush-reactjs\\src\\index.js":"1","F:\\candy-crush-reactjs\\src\\App.js":"2","F:\\candy-crush-reactjs\\src\\components\\ScoreBoard.js":"3","F:\\candy-crush\\src\\index.js":"4","F:\\candy-crush\\src\\App.js":"5"},{"size":223,"mtime":1666842931120,"results":"6","hashOfConfig":"7"},{"size":4932,"mtime":1666849507929,"results":"8","hashOfConfig":"7"},{"size":155,"mtime":1666842931037,"results":"9","hashOfConfig":"7"},{"size":223,"mtime":1666842931120,"results":"10","hashOfConfig":"11"},{"size":4932,"mtime":1666849507929,"results":"12","hashOfConfig":"11"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"130p1vo",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eb69c3",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\candy-crush-reactjs\\src\\index.js",[],["25","26"],"F:\\candy-crush-reactjs\\src\\App.js",["27","28","29","30","31"],"import { useEffect, useState } from \"react\";\r\nconst width = 8;\r\nconst candyColours =  [\r\n  'blue',\r\n  'green',\r\n   'orange',\r\n  'purple',\r\n  'red',\r\n  'yellow'\r\n]\r\n\r\n const  App = () => {\r\n  const[currentColorArrangement, setCurrentColorArrangement]=useState([])\r\n  const[squareBeingDragged,setSquareBeingDragged]=useState(null)\r\n  const[squareBeingReplaced,setSquareBeingReplaced]=useState(null)\r\n\r\n\r\nconst checkForColumnOfFour = () => {\r\n    for(let i=0; i<=39; i++){\r\n      const columnOfFour = [i, i+width, i+width*2, i+width*3]\r\n      const decidedColor = currentColorArrangement[i]\r\n      if(columnOfFour.every(square => currentColorArrangement[square] === decidedColor)){\r\n        columnOfFour.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n\r\nconst checkForRowOfFour = () => {\r\n    for(let i=0; i<64; i++){\r\n      const rowOfFour = [i, i+1, i+2, i+3]\r\n      const decidedColor = currentColorArrangement[i]\r\n      const notValid=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64]\r\n      if(notValid.includes(i)) continue\r\n\r\n      if(rowOfFour.every(square => currentColorArrangement[square] === decidedColor)){\r\n        rowOfFour.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const checkForColumnOfThree = () => {\r\n    for(let i=0; i<=47; i++){\r\n      const columnOfThree = [i, i+width, i+width*2]\r\n      const decidedColor = currentColorArrangement[i]\r\n\r\n      if(columnOfThree.every(square => currentColorArrangement[square] === decidedColor)){\r\n        columnOfThree.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n  const checkForRowOfThree = () => {\r\n    for(let i=0; i<64; i++){\r\n      const rowOfThree = [i, i+1, i+2]\r\n      const decidedColor = currentColorArrangement[i]\r\n      const notValid=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64]\r\n      if(notValid.includes(i)) continue\r\n      if(rowOfThree.every(square => currentColorArrangement[square] === decidedColor)){\r\n        rowOfThree.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const moveIntoSquareBelow =()=>{\r\n    for(let i=0; i<=55; i++){\r\n      const firstRow=[1,2,3,4,5,6,7]\r\n     const isFirstRow= firstRow.includes(i)\r\n     if(isFirstRow && currentColorArrangement[i]===''){\r\n    let randomNumber= Math.floor(Math.random()* candyColours.length)\r\n    currentColorArrangement[i]=candyColours[randomNumber]\r\n     }\r\n      if((currentColorArrangement[i+width]) ===''){\r\n        currentColorArrangement[i+width]=currentColorArrangement[i]\r\n        currentColorArrangement[i]=''\r\n      }\r\n    }\r\n  }\r\n  \r\n  const dragStart = (e) =>{\r\n    console.log(e.target)\r\n    console.log('drag start')\r\n    setSquareBeingDragged(e.target)\r\n    \r\n    }\r\n    const dragDrop = (e) =>{\r\n      console.log(e.target)\r\n      console.log('drag drop')\r\n      setSquareBeingReplaced(e.target)\r\n      \r\n      \r\n      }\r\n      const dragEnd = (e) =>{\r\n        console.log(e.target)\r\n        console.log('drag end')\r\n\r\n      const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'))\r\n      const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\r\n      currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.style.backgroundColor\r\n        currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.style.backgroundColor \r\n      }\r\n\r\n\r\n  const createBoard = () => {\r\n    const randomColorArrangement = []\r\n    for(let i=0; i<width * width; i++){\r\n      \r\n      const randomColor = candyColours[Math.floor(Math.random()*candyColours.length)]\r\n      randomColorArrangement.push(randomColor)\r\n\r\n    }\r\n    setCurrentColorArrangement(randomColorArrangement)\r\n    \r\n  }\r\n  useEffect(() =>{\r\n\r\n    createBoard()\r\n  }, [])\r\n\r\n  useEffect(() =>{\r\n    const timer = setInterval(() =>{\r\n          checkForColumnOfFour()\r\n          checkForRowOfFour()\r\n          checkForColumnOfThree()\r\n          checkForRowOfThree()\r\n          moveIntoSquareBelow()\r\n          setCurrentColorArrangement([...currentColorArrangement])\r\n\r\n    }, 100)\r\n    return () => clearInterval(timer)\r\n\r\n  }, [checkForColumnOfFour,checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement])\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"game\">\r\n        {currentColorArrangement.map((candyColor, index ) => (\r\n          <img\r\n          key={index}\r\n          style={{backgroundColor : candyColor}}\r\n          alt={candyColor}\r\n          data-id={index}\r\n          draggable={true}\r\n          onDragStart={dragStart}\r\n          onDragOver={(e)=> e.preventDefault()}\r\n          onDragEnter={(e)=> e.preventDefault()}\r\n          onDragLeave={(e)=> e.preventDefault()}\r\n          onDrop={dragDrop}\r\n          onDragEnd={dragEnd}\r\n\r\n          />\r\n\r\n\r\n        ))\r\n\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","F:\\candy-crush-reactjs\\src\\components\\ScoreBoard.js",[],"F:\\candy-crush\\src\\index.js",[],"F:\\candy-crush\\src\\App.js",["32","33","34","35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":18,"column":7,"nodeType":"43","endLine":27,"endColumn":4},{"ruleId":"41","severity":1,"message":"44","line":29,"column":7,"nodeType":"43","endLine":41,"endColumn":4},{"ruleId":"41","severity":1,"message":"45","line":43,"column":9,"nodeType":"43","endLine":53,"endColumn":4},{"ruleId":"41","severity":1,"message":"46","line":54,"column":9,"nodeType":"43","endLine":65,"endColumn":4},{"ruleId":"41","severity":1,"message":"47","line":67,"column":9,"nodeType":"43","endLine":80,"endColumn":4},{"ruleId":"41","severity":1,"message":"42","line":18,"column":7,"nodeType":"43","endLine":27,"endColumn":4},{"ruleId":"41","severity":1,"message":"44","line":29,"column":7,"nodeType":"43","endLine":41,"endColumn":4},{"ruleId":"41","severity":1,"message":"45","line":43,"column":9,"nodeType":"43","endLine":53,"endColumn":4},{"ruleId":"41","severity":1,"message":"46","line":54,"column":9,"nodeType":"43","endLine":65,"endColumn":4},{"ruleId":"41","severity":1,"message":"47","line":67,"column":9,"nodeType":"43","endLine":80,"endColumn":4},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","The 'checkForColumnOfFour' function makes the dependencies of useEffect Hook (at line 134) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'checkForColumnOfFour' in its own useCallback() Hook.","VariableDeclarator","The 'checkForRowOfFour' function makes the dependencies of useEffect Hook (at line 134) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'checkForRowOfFour' in its own useCallback() Hook.","The 'checkForColumnOfThree' function makes the dependencies of useEffect Hook (at line 134) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'checkForColumnOfThree' in its own useCallback() Hook.","The 'checkForRowOfThree' function makes the dependencies of useEffect Hook (at line 134) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'checkForRowOfThree' in its own useCallback() Hook.","The 'moveIntoSquareBelow' function makes the dependencies of useEffect Hook (at line 134) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'moveIntoSquareBelow' in its own useCallback() Hook.","no-global-assign","no-unsafe-negation"]