{"ast":null,"code":"var _jsxFileName = \"F:\\\\candy-crush-reactjs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 8;\nconst candyColours = ['blue', 'green', 'orange', 'purple', 'red', 'yellow'];\nconst App = () => {\n  _s();\n  const [currentColorArrangement, setCurrentColorArrangement] = useState([]);\n  const [squareBeingDragged, setSquareBeingDragged] = useState(null);\n  const [squareBeingReplaced, setSquareBeingReplaced] = useState(null);\n  const checkForColumnOfThree = () => {\n    for (let i = 0; i <= 47; i++) {\n      const columnOfThree = [i, i + width, i + width * 2];\n      const decidedColor = currentColorArrangement[i];\n      if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor)) {\n        columnOfThree.forEach(square => currentColorArrangement[square] = '');\n      }\n    }\n  };\n  const checkForRowOfThree = () => {\n    for (let i = 0; i < 64; i++) {\n      const rowOfThree = [i, i + 1, i + 2];\n      const decidedColor = currentColorArrangement[i];\n      const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64];\n      if (notValid.includes(i)) continue;\n      if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor)) {\n        rowOfThree.forEach(square => currentColorArrangement[square] = '');\n      }\n    }\n  };\n  const checkForColumnOfFour = () => {\n    for (let i = 0; i <= 39; i++) {\n      const columnOfFour = [i, i + width, i + width * 2, i + width * 3];\n      const decidedColor = currentColorArrangement[i];\n      if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor)) {\n        columnOfFour.forEach(square => currentColorArrangement[square] = '');\n      }\n    }\n  };\n  const checkForRowOfFour = () => {\n    for (let i = 0; i < 64; i++) {\n      const rowOfFour = [i, i + 1, i + 2, i + 3];\n      const decidedColor = currentColorArrangement[i];\n      const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64];\n      if (notValid.includes(i)) continue;\n      if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor)) {\n        rowOfFour.forEach(square => currentColorArrangement[square] = '');\n      }\n    }\n  };\n  const moveIntoSquareBelow = () => {\n    for (let i = 0; i <= 55; i++) {\n      const firstRow = [1, 2, 3, 4, 5, 6, 7];\n      const isFirstRow = firstRow.includes(i);\n      if (isFirstRow && currentColorArrangement[i] === '') {\n        let randomNumber = Math.floor(Math.random() * candyColours.length);\n        currentColorArrangement[i] = candyColours[randomNumber];\n      }\n      if (currentColorArrangement[i + width] === '') {\n        currentColorArrangement[i + width] = currentColorArrangement[i];\n        currentColorArrangement[i] = '';\n      }\n    }\n  };\n  const dragStart = e => {\n    console.log(e.target);\n    console.log('drag start');\n    setSquareBeingDragged(e.target);\n  };\n  const dragDrop = e => {\n    console.log(e.target);\n    console.log('drag drop');\n    setSquareBeingReplaced(e.target);\n  };\n  const dragEnd = e => {\n    console.log(e.target);\n    console.log('drag end');\n    const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'));\n    const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'));\n    currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.style.backgroundColor;\n    currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.style.backgroundColor;\n  };\n  const createBoard = () => {\n    const randomColorArrangement = [];\n    for (let i = 0; i < width * width; i++) {\n      const randomColor = candyColours[Math.floor(Math.random() * candyColours.length)];\n      randomColorArrangement.push(randomColor);\n    }\n    setCurrentColorArrangement(randomColorArrangement);\n  };\n  useEffect(() => {\n    createBoard();\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      checkForColumnOfFour();\n      checkForRowOfFour();\n      checkForColumnOfThree();\n      checkForRowOfThree();\n      moveIntoSquareBelow();\n      setCurrentColorArrangement([...currentColorArrangement]);\n    }, 100);\n    return () => clearInterval(timer);\n  }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement]);\n  console.log(currentColorArrangement);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: currentColorArrangement.map((candyColor, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          backgroundColor: candyColor\n        },\n        alt: candyColor,\n        \"data-id\": index,\n        draggable: true,\n        onDragStart: dragStart,\n        onDragOver: e => e.preventDefault(),\n        onDragEnter: e => e.preventDefault(),\n        onDragLeave: e => e.preventDefault(),\n        onDrop: {\n          dragDrop\n        },\n        onDragEnd: dragEnd\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YAFBKK/vtRLx4p+BzsfiG2zDKC0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","width","candyColours","App","currentColorArrangement","setCurrentColorArrangement","squareBeingDragged","setSquareBeingDragged","squareBeingReplaced","setSquareBeingReplaced","checkForColumnOfThree","i","columnOfThree","decidedColor","every","square","forEach","checkForRowOfThree","rowOfThree","notValid","includes","checkForColumnOfFour","columnOfFour","checkForRowOfFour","rowOfFour","moveIntoSquareBelow","firstRow","isFirstRow","randomNumber","Math","floor","random","length","dragStart","e","console","log","target","dragDrop","dragEnd","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","style","backgroundColor","createBoard","randomColorArrangement","randomColor","push","timer","setInterval","clearInterval","map","candyColor","index","preventDefault"],"sources":["F:/candy-crush-reactjs/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nconst width = 8;\r\nconst candyColours =  [\r\n  'blue',\r\n  'green',\r\n  'orange',\r\n  'purple',\r\n  'red',\r\n  'yellow'\r\n]\r\n\r\n const App = () => {\r\n  const[currentColorArrangement, setCurrentColorArrangement]=useState([])\r\n  const[squareBeingDragged,setSquareBeingDragged]=useState(null)\r\n  const[squareBeingReplaced,setSquareBeingReplaced]=useState(null)\r\n  const checkForColumnOfThree = () => {\r\n    for(let i=0; i<=47; i++){\r\n      const columnOfThree = [i, i+width, i+width*2]\r\n      const decidedColor = currentColorArrangement[i]\r\n      if(columnOfThree.every(square => currentColorArrangement[square] === decidedColor)){\r\n        columnOfThree.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n  const checkForRowOfThree = () => {\r\n    for(let i=0; i<64; i++){\r\n      const rowOfThree = [i, i+1, i+2]\r\n      const decidedColor = currentColorArrangement[i]\r\n      const notValid=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64]\r\n      if(notValid.includes(i)) continue\r\n      if(rowOfThree.every(square => currentColorArrangement[square] === decidedColor)){\r\n        rowOfThree.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const checkForColumnOfFour = () => {\r\n    for(let i=0; i<=39; i++){\r\n      const columnOfFour = [i, i+width, i+width*2, i+width*3]\r\n      const decidedColor = currentColorArrangement[i]\r\n      if(columnOfFour.every(square => currentColorArrangement[square] === decidedColor)){\r\n        columnOfFour.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n  const checkForRowOfFour = () => {\r\n    for(let i=0; i<64; i++){\r\n      const rowOfFour = [i, i+1, i+2, i+3]\r\n      const decidedColor = currentColorArrangement[i]\r\n      const notValid=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64]\r\n      if(notValid.includes(i)) continue\r\n\r\n      if(rowOfFour.every(square => currentColorArrangement[square] === decidedColor)){\r\n        rowOfFour.forEach(square => currentColorArrangement[square]='')\r\n      }\r\n    }\r\n\r\n  }\r\n  const moveIntoSquareBelow = ()=>{\r\n    for(let i=0; i<=55; i++){\r\n      const firstRow=[1,2,3,4,5,6,7]\r\n     const isFirstRow= firstRow.includes(i)\r\n     if(isFirstRow && currentColorArrangement[i]===''){\r\n    let randomNumber= Math.floor(Math.random()* candyColours.length)\r\n    currentColorArrangement[i]=candyColours[randomNumber]\r\n     }\r\n      if((currentColorArrangement[i+width])===''){\r\n        currentColorArrangement[i+width]=currentColorArrangement[i]\r\n        currentColorArrangement[i]=''\r\n      }\r\n    }\r\n  }\r\n  \r\n  const dragStart = (e) =>{\r\n    console.log(e.target)\r\n    console.log('drag start')\r\n    setSquareBeingDragged(e.target)\r\n    \r\n    }\r\n    const dragDrop = (e) =>{\r\n      console.log(e.target)\r\n      console.log('drag drop')\r\n      setSquareBeingReplaced(e.target)\r\n      \r\n      \r\n      }\r\n      const dragEnd = (e) =>{\r\n        console.log(e.target)\r\n        console.log('drag end')\r\n\r\n      const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'))\r\n      const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\r\n      currentColorArrangement[squareBeingReplacedId]=squareBeingDragged.style.backgroundColor\r\n      currentColorArrangement[squareBeingDraggedId]=squareBeingReplaced.style.backgroundColor\r\n      }\r\n\r\n\r\n  const createBoard = () => {\r\n    const randomColorArrangement = []\r\n    for(let i=0; i<width * width; i++){\r\n      \r\n      const randomColor = candyColours[Math.floor(Math.random()*candyColours.length)]\r\n      randomColorArrangement.push(randomColor)\r\n\r\n    }\r\n    setCurrentColorArrangement(randomColorArrangement)\r\n    \r\n  }\r\n  useEffect(() =>{\r\n\r\n    createBoard()\r\n  }, [])\r\n  useEffect(()=>{\r\n    const timer= setInterval(()=>{\r\n      checkForColumnOfFour()\r\n      checkForRowOfFour()\r\n     checkForColumnOfThree()\r\n      checkForRowOfThree()\r\n      moveIntoSquareBelow()\r\n      setCurrentColorArrangement([... currentColorArrangement])\r\n      \r\n    },100)\r\n    return ()=>clearInterval(timer)\r\n  \r\n    \r\n\r\n  },[checkForColumnOfFour,checkForRowOfFour,checkForColumnOfThree, checkForRowOfThree,moveIntoSquareBelow,currentColorArrangement])\r\n  console.log(currentColorArrangement)\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"game\">\r\n        {currentColorArrangement.map((candyColor, index ) => (\r\n          <img\r\n          key={index}\r\n          style={{backgroundColor : candyColor}}\r\n          alt={candyColor}\r\n          data-id={index}\r\n          draggable={true}\r\n          onDragStart={dragStart}\r\n          onDragOver={(e)=> e.preventDefault()}\r\n          onDragEnter={(e)=> e.preventDefault()}\r\n          onDragLeave={(e)=> e.preventDefault()}\r\n          onDrop={{dragDrop}}\r\n          onDragEnd={dragEnd}\r\n          />\r\n\r\n\r\n        ))\r\n\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}